{"ast":null,"code":"import _defineProperty from \"E:\\\\Development\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\Development\\\\todo\\\\src\\\\components\\\\app\\\\app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport TodoList from \"../todo-list\";\nimport React, { Component } from \"react\";\nimport AddTodoListItem from \"../add-button\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Drink Coffee'), this.createTodoItem('Have a zaglot'), this.createTodoItem('Sosat')],\n      term: '',\n      filter: ''\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onSearchChange = term => {\n      this.setState({\n        term\n      });\n    };\n\n    this.onActive = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.onDone = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.onAll = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.onlyDone = done => {\n      const arr = [];\n\n      for (let i = 0; i < this.state.todoData.length; i++) {\n        if (this.state.todoData[i].done === this.state.filter) {\n          arr.push(this.state.todoData[i]);\n        }\n\n        return {\n          todoData: arr\n        };\n      }\n    };\n\n    this.onlyActive = active => {\n      const arr = [];\n\n      for (let i = 0; i < this.state.todoData.length; i++) {\n        if (this.state.todoData[i].done === false) {\n          arr.push(this.state.todoData[i]);\n        }\n\n        return {\n          todoData: arr\n        };\n      }\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n\n    const newItem = _objectSpread({}, oldItem, {\n      [propName]: !oldItem[propName]\n    });\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          todoData = _this$state.todoData,\n          term = _this$state.term;\n    const visibleItems = this.search(todoData, term);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      searchItem: this.searchItem,\n      onSearchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      all: this.state.todoData,\n      onlyDone: this.onlyDone,\n      onlyActive: this.onlyActive,\n      onActive: this.onActive,\n      onDone: this.onDone,\n      onAll: this.onAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(TodoList, {\n      todos: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(AddTodoListItem, {\n      newTextItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/Development/todo/src/components/app/app.js"],"names":["AppHeader","SearchPanel","TodoList","React","Component","AddTodoListItem","ItemStatusFilter","App","maxId","state","todoData","createTodoItem","term","filter","addItem","text","newItem","setState","newArr","deleteItem","id","idx","findIndex","el","newArray","slice","onToggleDone","toggleProperty","onToggleImportant","onSearchChange","onActive","onDone","onAll","onlyDone","done","arr","i","length","push","onlyActive","active","label","important","propName","oldItem","search","items","item","toLowerCase","indexOf","render","visibleItems","doneCount","todoCount","searchItem"],"mappings":"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","sourcesContent":["import AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport React, {Component} from \"react\";\r\nimport AddTodoListItem from \"../add-button\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Have a zaglot'),\r\n            this.createTodoItem('Sosat')\r\n        ],\r\n\r\n        term: '',\r\n        filter: ''\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    addItem = (text) => {\r\n\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n\r\n    };\r\n\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    }\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onActive = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    onDone = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    onAll = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n\r\n    onlyDone = (done) => {\r\n        const arr = [];\r\n        for (let i = 0; i < this.state.todoData.length; i++) {\r\n            if (this.state.todoData[i].done === this.state.filter) {\r\n                arr.push(this.state.todoData[i])\r\n            }\r\n\r\n            return {\r\n                todoData: arr\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    onlyActive = (active) => {\r\n        const arr = [];\r\n        for (let i = 0; i < this.state.todoData.length; i++) {\r\n            if (this.state.todoData[i].done === false) {\r\n                arr.push(this.state.todoData[i])\r\n            }\r\n\r\n            return {\r\n                todoData: arr\r\n            };\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {todoData, term} = this.state;\r\n\r\n        const visibleItems = this.search(todoData, term);\r\n\r\n        const doneCount = todoData\r\n            .filter((el) => el.done)\r\n            .length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        searchItem={this.searchItem}\r\n                        onSearchChange={this.onSearchChange}\r\n                    />\r\n\r\n                    <ItemStatusFilter\r\n                        all={this.state.todoData}\r\n                        onlyDone={this.onlyDone}\r\n                        onlyActive={this.onlyActive}\r\n                        onActive={this.onActive}\r\n                        onDone={this.onDone}\r\n                        onAll={this.onAll}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}\r\n                />\r\n\r\n                <AddTodoListItem newTextItem={this.addItem}/>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}